/* Basic styling for the Flight Data Visualizer */
body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f0f4f8; /* Light grayish-blue background */
    color: #333; /* Dark gray text */
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

header {
    background-color: #4a69bd; /* Medium blue */
    color: white;
    padding: 1rem;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

header h1 {
    margin: 0 0 0.5rem 0;
    font-size: 1.8em;
}

#connectionControls {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
}

#connectionStatus {
    padding: 0.5em;
    border-radius: 4px;
    font-weight: bold;
    min-width: 250px; /* Ensure it doesn't resize too much */
    text-align: center;
}

/* Connection status styles */
.status-disconnected {
    background-color: #e74c3c; /* Red */
    color: white;
}
.status-connected {
    background-color: #2ecc71; /* Green */
    color: white;
}
.status-connecting {
    background-color: #f39c12; /* Orange */
    color: white;
}
.status-error {
    background-color: #e74c3c; /* Red */
    color: white;
}


main {
    flex: 1; /* Allows main to grow and fill available space */
    padding: 1rem;
    display: flex; /* For side-by-side panels */
    flex-wrap: wrap; /* Allow wrapping for smaller screens */
    gap: 1rem;
}

#dataDashboard { /* This ID was in index.html, let's use it for the flex container */
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    width: 100%;
}


#numericalDataPanel, #chartsPanel {
    background-color: #ffffff;
    padding: 1rem;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.05);
}

#numericalDataPanel {
    flex: 1; /* Takes up 1 part of the space */
    min-width: 300px; /* Minimum width before wrapping */
}

#visualizationsContainer { /* New style for the container */
    flex: 2; /* Similar to how chartsPanel was sized */
    min-width: 400px;
    display: flex; /* Use flex to manage heading and chartsPanel */
    flex-direction: column;
    gap: 1rem; /* Optional: if you want space between heading and chartsPanel */
}

#visualizationsContainer h2 { /* Style for the h2 within the new container */
    text-align: center;
    color: #4a69bd; /* Blue matching other headers */
    margin-top: 0;
    margin-bottom: 0; /* Remove default bottom margin or adjust as needed */
}

#chartsPanel {
    /* flex: 2; */ /* Flex is now on visualizationsContainer */
    /* min-width: 400px; */ /* min-width is now on visualizationsContainer */
    background-color: #ffffff;
    padding: 1rem;
    border-radius: 8px;
    display: grid; /* Changed from flex to grid */
    grid-template-columns: repeat(2, 1fr); /* Two equal columns */
    gap: 1rem;
    align-content: start; /* Align items to the start of the grid container */
}

section h2, section h3 {
    color: #4a69bd; /* Blue matching header */
    margin-top: 0;
}
section h3 {
    font-size: 1.1em;
    border-bottom: 1px solid #eee;
    padding-bottom: 0.3em;
    margin-bottom: 0.5em;
}


#numericalDataPanel > div { /* Style for gpsData, orientationData, sensorData divs */
    margin-bottom: 1rem;
    padding: 0.5rem;
    background-color: #f9f9f9;
    border-radius: 4px;
}
#numericalDataPanel span {
    font-weight: bold;
    color: #555;
}


.chart-container {
    /* aspect-ratio: 16 / 9; /* Maintain aspect ratio */
    /* max-width: 100%; /* Ensure it scales down */
    /* Instead of aspect-ratio, let's set a height for better control in flex */
    height: 250px; /* Adjusted height for charts in 2-column layout */
    background-color: #fdfdfd;
    border: 1px solid #e0e0e0;
    border-radius: 4px;
    padding: 0.5rem;
    box-shadow: 0 1px 3px rgba(0,0,0,0.03);
    margin-bottom: 1rem; /* Added to create space for timestamp labels */
}
.chart-container canvas {
    width: 100% !important; /* Override Chart.js inline style if necessary */
    height: 100% !important;
}


button {
    background-color: #5dade2; /* Lighter blue */
    color: white;
    border: none;
    padding: 0.6em 1.2em;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.9em;
    transition: background-color 0.2s ease;
}
button:hover {
    background-color: #3498db; /* Darker blue on hover */
}
button:disabled {
    background-color: #bdc3c7; /* Gray when disabled */
    cursor: not-allowed;
}


footer {
    background-color: #34495e; /* Dark blue-gray */
    color: white;
    text-align: center;
    padding: 1rem;
    margin-top: auto; /* Pushes footer to bottom if content is short */
}

/* Responsive adjustments */
@media (max-width: 768px) {
    main, #dataDashboard {
        flex-direction: column;
    }
    #numericalDataPanel, #chartsPanel {
        flex-basis: 100%; /* Full width on smaller screens */
    }
    header h1 {
        font-size: 1.5em;
    }
}

/* Serial Terminal Styles */
#serialTerminalSection {
    background-color: #ffffff;
    padding: 1rem;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    margin-top: 1rem; /* Add some space above the terminal */
    width: 100%; /* Make it take full width available in main */
}

#serialTerminalSection h2 {
    color: #4a69bd;
    margin-top: 0;
    margin-bottom: 0.5rem;
}

.terminal-output {
    height: 150px; /* Adjust as needed */
    background-color: #2c3e50; /* Dark background for terminal */
    color: #ecf0f1; /* Light text */
    font-family: 'Courier New', Courier, monospace;
    font-size: 0.9em;
    padding: 0.5rem;
    border-radius: 4px;
    overflow-y: auto; /* Scroll for older content */
    white-space: pre-wrap; /* Preserve whitespace and wrap lines */
    border: 1px solid #34495e;
}

#serialTerminalInputContainer {
    display: flex;
    margin-top: 0.5rem;
    gap: 0.5rem;
}

#serialCommandInput {
    flex-grow: 1;
    padding: 0.5em;
    border: 1px solid #ccc;
    border-radius: 4px;
}

#serialSendCommandButton {
    /* Uses existing button styles, can add specific overrides if needed */
}
